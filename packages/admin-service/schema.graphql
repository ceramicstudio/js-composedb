type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
  composites: [Composite!]!
  models: [Model!]!
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type Composite implements Node {
  """The ID of an object"""
  id: ID!
  compositeID: ID!
  description: String
  isEnabled: Boolean!
  mutationsEnabled: Boolean!
  subscriptionsEnabled: Boolean!
  models: [Model!]!
  modelsCount: Int!
}

type Model implements Node {
  """The ID of an object"""
  id: ID!
  streamID: ID!
  controller: String!
  name: String!
  description: String
  composites: [Composite!]!
  compositesCount: Int!
  indexingEnabled: Boolean!
  documentsCount: Int!
}