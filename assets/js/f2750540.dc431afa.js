(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[620],{32853:(e,t,n)=>{"use strict";n.r(t),n.d(t,{contentTitle:()=>yt,default:()=>kt,frontMatter:()=>ht,metadata:()=>wt,toc:()=>gt});var r=n(35664),i=n(49231),o=n(54852),s=n(93097),a=n(59281),c=n(67160);async function l(e,t){const n=function(e){const{after:t,before:n,first:r,last:i,...o}=e;let s;if(null!=r?(s={first:r},null!=t&&(s.after=t)):null!=i&&(s={last:i},null!=n&&(s.before=n)),null==s)throw new Error('Missing "first" or "last" connection argument');return{...o,...s}}(t),r=await e.index.query(n);return function(e,t){return{edges:(t.edges??[]).map((t=>{let{cursor:n,node:r}=t;return{cursor:n,node:r?e.buildStreamFromState(r):null}})),pageInfo:{...t.pageInfo,startCursor:t.pageInfo.startCursor??null,endCursor:t.pageInfo.endCursor??null}}}(e,r)}const d=["greaterThan","greaterThanOrEqualTo"],u=["lessThan","lessThanOrEqualTo"];function p(e){if(null==e)throw new Error("No value filter provided");const t=Object.keys(e);if(0===t.length)throw new Error("Invalid empty value filter");if(t.length>2)throw new Error("Too many conditions provided in value filter");if(2===t.length){if(n=t[0],r=t[1],d.includes(n)&&u.includes(r)||d.includes(r)&&u.includes(n))return;throw new Error("Invalid range conditions in value filter")}var n,r;const i=t[0],o=e[i];switch(i){case"in":case"notIn":if(!Array.isArray(o))throw new Error(`Invalid value for condition "${i}": must be an array`);return;case"isNull":case"equalTo":case"notEqualTo":return;default:if(d.includes(i)||u.includes(i))return;throw new Error(`Unexpected condition "${i}" in value filter`)}}function m(e){if(null==e)throw new Error("No query filters provided");const t=Object.keys(e);if(1!==t.length)throw new Error("Invalid query filters: a single key must be provided");const n=t[0],r=e[n];if(null==r)throw new Error("Invalid query filters: missing filter value");switch(n){case"where":return void function(e){if(null==e)throw new Error("No object filter provided");const t=Object.values(e);if(0===t.length)throw new Error("Empty object filter");t.forEach(p)}(r);case"not":return void m(r);case"and":case"or":if(!Array.isArray(r))throw new Error(`Invalid value for "${n}" filter: must be an array`);return void r.forEach(m);default:throw new Error(`Invalid query filter type: expecting "where", "and", "or" or "not" key but got "${n}"`)}}function f(e,t,n){const r={where:{[e]:{equalTo:t}}};return null==n?r:(m(n),{and:[r,n]})}var h=n(22271),y=n(98590),w=n(75331),g=n(12925);function b(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function v(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,b(e,t,"get"))}function k(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function T(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,b(e,t,"set"),n),n}function x(e){return"string"==typeof e?y.i.from(e).toString():e.toString()}const I=()=>Promise.resolve([]);var q=new WeakMap,C=new WeakMap;class E extends g{cache(e){if(!v(this,C))return!1;const t=e.id.toString();return this.clear(t).prime(t,e),!0}async create(e,t,n){let{controller:r,...i}=void 0===n?{}:n;const o={controller:r,model:e instanceof w.Eb?e:w.Eb.fromString(e)},s=await h.U.create(v(this,q),t,o,i);return this.cache(s),s}async load(e){return await super.load(e)}async single(e,t,n){const r={controller:e,model:t instanceof w.Eb?t:w.Eb.fromString(t)},i=await h.U.single(v(this,q),r,n);return this.cache(i),i}async update(e,t,n){let{replace:r,version:i,...o}=void 0===n?{}:n;const s=x(e);this.clear(s);const a=await this.load(s);if(null!=i&&a.commitId.toString()!==i)throw new Error("Stream version mismatch");const c=r?t:{...a.content,...t};return await a.replace(c,o),a}constructor(e){super(I,{cache:!0,cacheKeyFn:x,cacheMap:null!=e.cache&&"boolean"!=typeof e.cache?e.cache:void 0}),k(this,q,{writable:!0,value:void 0}),k(this,C,{writable:!0,value:void 0}),this._batchLoadFn=async t=>{e.cache||this.clearAll();const n=await e.ceramic.multiQuery(t.map(x).map((e=>({streamId:e}))),e.multiqueryTimeout);return t.map((e=>{const t=x(e),r=n[t];return r||new Error(`Failed to load document: ${t}`)}))},T(this,q,e.ceramic),T(this,C,!!e.cache)}}function S(e){const{cache:t,ceramic:n,fallbackViewerID:r}=e,i=e.loader??new E({ceramic:n,cache:t});function o(){const e=n.did;return e?e.hasParent?e.parent:e.id:r??null}return{ceramic:n,loader:i,getViewerID:o,isAuthenticated:()=>n.did?.authenticated??!1,loadDoc:async function(e,t){return void 0===t&&(t=!1),t&&i.clear(e),await i.load(e)},createDoc:async(e,t)=>await i.create(e,t),createSingle:async(e,t,n)=>{const r=o();if(null==r)throw new Error("Document can only be created with an authenticated account");const s=await i.single(r,e,n);return await s.replace(t),s},updateDoc:async(e,t,n)=>await i.update(e,t,n),queryConnection:async e=>await l(n,e),queryCount:async e=>await n.index.count(e),querySingle:async e=>await async function(e,t){const n={...t,last:1},r=await e.index.query(n),i=r.edges?.[0]?.node;return i?e.buildStreamFromState(i):null}(n,e)}}var j=n(29179),D=n(45943),$=n(53346),P=n(60945),_=n(11182),F=n(19545),O=n(801);function M(e){return P.NQ.fromString(e).toString()}function R(e){return w.Eb.fromString(e).toString()}const N=new _.n2({name:"CeramicCommitID",description:"A Ceramic Commit ID",specifiedByURL:"https://cips.ceramic.network/CIPs/cip-59#commitid",serialize:M,parseValue:M,parseLiteral(e){if(e.kind!==F.h.STRING)throw new O.__(`Can only validate strings as CommitID but got a: ${e.kind}`);return M(e.value)}}),z=new _.n2({name:"CeramicStreamID",description:"A Ceramic Stream ID",specifiedByURL:"https://cips.ceramic.network/CIPs/cip-59#streamid",serialize:R,parseValue:R,parseLiteral(e){if(e.kind!==F.h.STRING)throw new O.__(`Can only validate strings as StreamID but got a: ${e.kind}`);return R(e.value)}});var A=n(88759),V=n(36028),B=n(61071),L=n(43111),U=n(5615),G=n(13478),Z=n(19233),W=n(3351),Q=n(26322),K=n(22461),X=n(38866),J=n(5204);function Y(e){return new J.hX(e).toString()}function H(e){return new J.a_(e).toString()}const ee=new _.n2({name:"ChainAgnosticAccountID",description:"A Chain Agnostic AccountId",specifiedByURL:"https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-10.md",serialize:Y,parseValue:Y,parseLiteral(e){if(e.kind!==F.h.STRING)throw new O.__(`Can only validate strings as ChainAgnosticAccountID but got a: ${e.kind}`);return Y(e.value)}}),te=new _.n2({name:"ChainAgnosticChainID",description:"A Chain Agnostic ChainId",specifiedByURL:"https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-2.md",serialize:H,parseValue:H,parseLiteral(e){if(e.kind!==F.h.STRING)throw new O.__(`Can only validate strings as ChainAgnosticAccountID but got a: ${e.kind}`);return H(e.value)}});function ne(e){e=e?.toUpperCase();return/^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\.\d{1,})?(([Z])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/.test(e)}function re(e){if(!/^(\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]))$/.test(e))return!1;const t=Number(e.substring(0,4)),n=Number(e.substring(5,2)),r=Number(e.substring(8,2));switch(n){case 2:return!((t%4==0&&t%100!=0||t%400==0)&&r>29)&&!((t%4==0&&t%100!=0||t%400==0)&&r>28);case 4:case 6:case 9:case 11:if(r>30)return!1}return!0}function ie(e){e=e?.toUpperCase();if(!/^(\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60))(\.\d{1,})?(([Z])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/.test(e))return!1;const t=Date.parse(e);if(Number.isNaN(t))return!1;const n=e.indexOf("T"),r=e.substring(0,n),i=e.substring(n+1);return re(r)&&ne(i)}const oe=new _.n2({name:"Date",description:"A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.",serialize:e=>{if("string"==typeof e&&re(e))return e;throw new TypeError(`Date cannot represent an invalid date-string ${String(e)}.`)},parseValue:e=>{if("string"==typeof e&&re(e))return e;throw new TypeError(`Date cannot represent an invalid date-string ${String(e)}.`)},parseLiteral:e=>{if(e.kind!==F.h.STRING)throw new TypeError("Date cannot represent non string or Date type");const{value:t}=e;if(re(t))return t;throw new TypeError(`Date cannot represent an invalid date-string ${String(t)}.`)},extensions:{codegenScalarType:"string",jsonSchema:{type:"string",format:"date"}}}),se=new _.n2({name:"DateTime",description:"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.",serialize:e=>{if("string"==typeof e&&ie(e)){if(-1!==e.indexOf("Z"))return e;throw new TypeError(`DateTime string must be formatted to UTC time ${String(e)}.`)}throw new TypeError(`DateTime cannot represent an invalid date-time-string ${String(e)}.`)},parseValue:e=>{if("string"==typeof e&&ie(e))return e;throw new TypeError(`DateTime cannot represent an invalid date-time-string ${String(e)}.`)},parseLiteral:e=>{if(e.kind!==F.h.STRING)throw new TypeError("DateTime cannot represent non string or Date type");const{value:t}=e;if(ie(t))return t;throw new TypeError(`DateTime cannot represent an invalid date-time-string ${String(t)}.`)},extensions:{codegenScalarType:"string",jsonSchema:{type:"string",format:"date-time"}}}),ae=new _.n2({name:"Time",description:"A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.",serialize(e){if(e instanceof Date){const t=e.toISOString();return t.substring(t.indexOf("T")+1)}if("string"==typeof e){if(ne(e))return e;throw new TypeError(`Time cannot represent an invalid time-string ${e}.`)}throw new TypeError("Time cannot be serialized from a non string, or non Date type "+JSON.stringify(e))},parseValue(e){if("string"!=typeof e)throw new TypeError(`Time cannot represent non string type ${JSON.stringify(e)}`);if(ne(e))return e;throw new TypeError(`Time cannot represent an invalid time-string ${e}.`)},parseLiteral(e){if(e.kind!==F.h.STRING)throw new TypeError(`Time cannot represent non string type: ${e.kind}`);const t=e.value;if(ne(t))return t;throw new TypeError(`Time cannot represent an invalid time-string ${String(t)}.`)},extensions:{codegenScalarType:"string",jsonSchema:{type:"string",format:"time"}}});var ce=n(33713);function le(e){const t="string"==typeof e?ce.k0.parse(e):ce.k0.asCID(e);if(null==t)throw new O.__(`Could not parse input as CID: ${e}`);return t.toV1().toString()}const de=new _.n2({name:"InterPlanetaryCID",description:"A IPLD CID",specifiedByURL:"https://github.com/multiformats/cid",serialize:le,parseValue:le,parseLiteral(e){if(e.kind!==F.h.STRING)throw new O.__(`Can only validate strings as CID but got a: ${e.kind}`);return le(e.value)}}),ue=new _.n2({name:"URI",description:"A field whose value conforms to the standard Uniform Resource Identifier (URI) format as specified in RFC3986.",specifiedByURL:"https://www.ietf.org/rfc/rfc3986.txt",parseValue:e=>e,parseLiteral(e){if(e.kind!==F.h.STRING)throw new O.__(`Can only validate strings as URIs but got a: ${e.kind}`);return e.value},extensions:{jsonSchema:{type:"string",format:"uri"}}}),pe={accountid:ee,boolean:A.EZ,chainid:te,cid:de,commitid:N,countrycode:V.h,date:oe,datetime:se,did:B.d,duration:L.sW,float:A.av,id:A.km,integer:A._o,latitude:U.o,localdate:G.$,locale:Z.c,localtime:W.Nc,longitude:Q.v,streamid:z,string:A.kH,time:ae,timezone:K.M,uri:ue,utcoffset:X.X},me=Object.keys(pe);function fe(e){if(function(e){return me.includes(e)}(e))return pe[e];throw new Error(`Unsupported scalar type: ${e}`)}var he=n(91939),ye=n(40367),we=n(7624);function ge(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function be(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ge(e,t,"get"))}function ve(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function ke(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ge(e,t,"set"),n),n}const Te=["meta","reference","list","view"];function xe(e){return!Te.includes(e.type)}const Ie=["enum","node"];function qe(e){return"reference"===e.type&&Ie.includes(e.refType)}function Ce(e,t,n,r){const i={model:e};return"account"===n.type?i.queryFilters=f(n.property,t,r):(i.account=t,null!=r&&(m(r),i.queryFilters=r)),i}const Ee={...we.Zd,account:{type:A.km,description:"Returns only documents created by the provided account"}},Se=new _.sR({name:"SetOptionsInput",fields:{syncTimeout:{type:A._o,description:"Maximum amount of time to lookup the stream over the network, in seconds - see https://developers.ceramic.network/reference/typescript/interfaces/_ceramicnetwork_common.CreateOpts.html#syncTimeoutSeconds"}}}),je=new _.sR({name:"UpdateOptionsInput",fields:{replace:{type:A.EZ,defaultValue:!1,description:"Fully replace the document contents instead of performing a shallow merge"},version:{type:N,description:"Only perform mutation if the document matches the provided version"}}}),De=new _.mR({name:"SortOrder",values:{ASC:{value:"ASC"},DESC:{value:"DESC"}}});function $e(e){return new _.sR({name:`${e.name}ValueFilterInput`,fields:{isNull:{type:A.EZ},equalTo:{type:e},notEqualTo:{type:e},in:{type:new _.p2(new _.bM(e))},notIn:{type:new _.p2(new _.bM(e))}}})}function Pe(e){return new _.sR({name:`${e.name}ValueFilterInput`,fields:{isNull:{type:A.EZ},equalTo:{type:e},notEqualTo:{type:e},in:{type:new _.p2(new _.bM(e))},notIn:{type:new _.p2(new _.bM(e))},lessThan:{type:e},lessThanOrEqualTo:{type:e},greaterThan:{type:e},greaterThanOrEqualTo:{type:e}}})}const _e={BooleanValueFilter:new _.sR({name:"BooleanValueFilterInput",fields:{isNull:{type:A.EZ},equalTo:{type:A.EZ}}}),FloatValueFilter:Pe(A.av),IntValueFilter:Pe(A._o),StringValueFilter:Pe(A.kH)},Fe={boolean:"BooleanValueFilter",float:"FloatValueFilter",integer:"IntValueFilter",string:"StringValueFilter"};var Oe=new WeakMap,Me=new WeakMap,Re=new WeakMap,Ne=new WeakMap,ze=new WeakMap,Ae=new WeakMap;class Ve{build(){this._buildEnums();const e=this._createSharedDefinitions();this._buildObjects(e),this._buildConnections();const t=this._createSchema(e);return(0,he.J)(t),t}_createSharedDefinitions(){const e=(0,we.SX)((async(e,t)=>e.startsWith("did:")?e:await t.loadDoc(e)),(e=>"string"==typeof e?"CeramicAccount":be(this,Ae)[e.metadata.model?.toString()])),t=new _.h6({name:"CeramicAccount",interfaces:[e.nodeInterface],fields:()=>{const e={id:{type:new _.bM(A.km),description:"Globally unique identifier of the account (DID string)",resolve:e=>e},isViewer:{type:new _.bM(A.EZ),description:"Whether the Ceramic instance is currently authenticated with this account or not",resolve:(e,t,n)=>n.isAuthenticated()&&n.getViewerID()===e}};for(const[t,n]of Object.entries(be(this,Oe).accountData??{})){const r=be(this,Oe).models[n.name];if(null==r)throw new Error(`Missing model for reference name: ${n.name}`);if("node"===n.type)e[t]={type:be(this,Re)[n.name],resolve:async(e,t,n)=>await n.querySingle({account:e,model:r.id})};else{if("account"!==n.type&&"connection"!==n.type)throw new Error(`Unsupported reference type: ${n.type}`);{const i=be(this,Ne)[`${n.name}Filters`],o=be(this,Ne)[`${n.name}Sorting`],s={...we.Zd};i&&o&&(s.filters={type:i},s.sorting={type:o}),e[t]={type:be(this,Re)[`${n.name}Connection`],args:s,resolve:async(e,t,i)=>{let{filters:o,...s}=t;const a=Ce(r.id,e,n,o);return await i.queryConnection({...a,...s})}},e[`${t}Count`]={type:new _.bM(A._o),args:i?{filters:{type:i}}:{},resolve:async(e,t,i)=>{let{filters:o}=t;const s=Ce(r.id,e,n,o);return await i.queryCount(s)}}}}}return e}}),n={node:e.nodeField,viewer:{type:t,description:"Account currently authenticated on the Ceramic instance, if set",resolve:(e,t,n)=>n.getViewerID()}};return{...e,accountObject:t,queryFields:n}}_resolveInterfaces(e,t){return void 0===t&&(t=[]),t.map((t=>{const n=be(this,Re)[t];if(null==n)throw new Error(`Missing interface ${t} for ${e}`);if(!(0,_.oT)(n))throw new Error(`Invalid type for ${t} for ${e}, expected interface`);return n}))}_buildEnums(){for(const[e,t]of Object.entries(be(this,Oe).enums))be(this,Re)[e]=new _.mR({name:e,values:t.reduce(((e,t)=>(e[t]={value:t},e)),{})})}_buildObjects(e){for(const[t,n]of Object.entries(be(this,Oe).objects))this._buildObjectType({definitions:e,name:t,fields:n})}_buildObjectType(e){const t=be(this,Oe).models[e.name];if(null==t)this._buildEmbeddedObjectType(e);else{const n={model:t,...e};t.interface?this._buildInterfaceObjectType(n):this._buildDocumentObjectType(n)}}_buildInterfaceObjectType(e){let{model:t,definitions:n,name:r,fields:i}=e;be(this,Re)[r]=new _.oW({name:r,interfaces:()=>this._resolveInterfaces(r,t.implements),fields:()=>{const e={};for(const[t,r]of Object.entries(i))switch(r.type){case"meta":continue;case"reference":e[t]=this._buildDocumentObjectReferenceField(t,r);break;case"list":e[t]={type:this._buildObjectListFieldType(n,r),resolve:e=>e.content?.[t]};break;case"view":{const o=this._buildDocumentObjectViewField(t,n,r,i);o&&(e[t]=o);break}default:e[t]={type:this._buildScalarFieldType(n,r),resolve:e=>e.content?.[t]}}return e}}),this._buildFiltersType(r,i),this._buildSortingType(r,i)}_buildDocumentObjectType(e){let{model:t,definitions:n,name:r,fields:i}=e;be(this,Re)[r]=new _.h6({name:r,interfaces:()=>[n.nodeInterface].concat(this._resolveInterfaces(r,t.implements)),isTypeOf:e=>e.metadata.model.toString()===t.id,fields:()=>{const e={id:{type:new _.bM(A.km),resolve:e=>e.id.toString()}};for(const[t,r]of Object.entries(i))switch(r.type){case"meta":continue;case"reference":e[t]=this._buildDocumentObjectReferenceField(t,r);break;case"list":e[t]={type:this._buildObjectListFieldType(n,r),resolve:e=>e.content?.[t]};break;case"view":{const o=this._buildDocumentObjectViewField(t,n,r,i);o&&(e[t]=o);break}default:e[t]={type:this._buildScalarFieldType(n,r),resolve:e=>e.content?.[t]}}return e}}),this._buildFiltersType(r,i),this._buildSortingType(r,i),be(this,Me)||(this._buildInputObjectType(r,i),this._buildNodeMutations(n.queryFields,r,t))}_buildEmbeddedObjectType(e){let{definitions:t,name:n,fields:r}=e;be(this,Re)[n]=new _.h6({name:n,fields:()=>{const e={};for(const[i,o]of Object.entries(r))switch(o.type){case"meta":continue;case"reference":e[i]=this._buildEmbeddedObjectReferenceField(i,o);break;case"list":e[i]={type:this._buildObjectListFieldType(t,o),resolve:e=>e[i]};break;case"view":throw new Error(`Unsupported view field ${i} on embedded object ${n}`);default:e[i]={type:this._buildScalarFieldType(t,o),resolve:e=>e[i]}}return e}}),be(this,Me)||this._buildInputObjectType(n,r)}_buildConnections(){for(const e of Object.keys(be(this,Oe).models)){const t=be(this,Re)[e];if(null==t)throw new Error(`Missing object type for connection: ${e}`);const{connectionType:n,edgeType:r}=(0,we.Tr)({nodeType:t});be(this,Re)[`${e}Connection`]=n,be(this,Re)[`${e}Edge`]=r}}_buildDocumentObjectReferenceField(e,t){const n="connection"===t.refType?t.refName+"Connection":t.refName,r=be(this,Re)[n];if(null==r)throw new Error(`Missing type: ${n}`);const i=t.required?new _.bM(r):r;switch(t.refType){case"connection":return{type:i,args:we.Zd,resolve:(e,t,n)=>{throw new Error("Not implemented")}};case"node":return{type:i,args:we.Zd,resolve:async(t,n,r)=>await r.loadDoc(t.content[e])};case"enum":case"object":return{type:i,resolve:t=>t.content[e]};default:throw new Error(`Unsupported reference type on document object: ${t.refType}`)}}_buildEmbeddedObjectReferenceField(e,t){const n=be(this,Re)[t.refName];if(null==n)throw new Error(`Missing type: ${t.refName}`);const r=t.required?new _.bM(n):n;switch(t.refType){case"enum":case"object":return{type:r,resolve:t=>t[e]};default:throw new Error(`Unsupported reference type on embedded object: ${t.refType}`)}}_buildObjectListFieldType(e,t){let n;if("reference"===t.item.type){if(n=be(this,Re)[t.item.refName],null==n)throw new Error(`Missing referenced object type: ${t.item.refName}`)}else n="did"===t.item.type?e.accountObject:fe(t.item.type);t.item.required&&(n=new _.bM(n));const r=new _.p2(n);return t.required?new _.bM(r):r}_buildDocumentObjectRelation(e,t,n,r){if("document"===n.source){if(null==r[n.property])throw new Error(`Missing reference field ${n.property} for relation defined on field ${e}`);const i=n.model?be(this,Re)[be(this,Ae)[n.model]]:t.nodeInterface;if(null==i)throw new Error(`Model not found for relation with ID ${n.model} on field ${e}`);return{type:i,resolve:async(e,t,r)=>{const o=e.content?.[n.property];if(null==o)return null;const s=await r.loadDoc(o);if(null==s)return null;if(null!=n.model){const e=s.metadata.model.toString();if((0,_.oT)(i)){const t=be(this,Oe).models[be(this,Ae)[e]];if(null==t||!t.implements.includes(n.model))return console.warn(`Ignoring unsupported model ${e} for document ${o}, expected model implementing the ${n.model} interface`),null}else if(e!==n.model)return console.warn(`Ignoring unexpected model ${e} for document ${o}, expected model ${n.model}`),null}return s}}}const i=n.model;if(null==i)throw new Error(`Missing model for relation on field ${e}`);const o=be(this,Ae)[i];if(null==o)throw new Error(`Model alias not found for relation with ID ${i} on field ${e}`);switch(n.source){case"queryConnection":{const e=be(this,Ne)[`${o}Filters`],t=be(this,Ne)[`${o}Sorting`],r={...Ee};return e&&t&&(r.filters={type:e},r.sorting={type:t}),{type:new _.bM(be(this,Re)[`${o}Connection`]),args:r,resolve:async(e,t,r)=>{const o="documentAccount"===t.account?e.metadata.controller:t.account,s=f(n.property,e.id.toString(),t.filters);return await r.queryConnection({...t,account:o,model:i,queryFilters:s})}}}case"queryCount":{const e=be(this,Ne)[`${o}Filters`],t={account:{type:A.km,description:"Counts only documents created by the provided account"}};return e&&(t.filters={type:e}),{type:new _.bM(A._o),args:t,resolve:async(e,t,r)=>{const o="documentAccount"===t.account?e.metadata.controller:t.account,s=f(n.property,e.id.toString(),t.filters);return await r.queryCount({account:o,model:i,queryFilters:s})}}}default:throw new Error(`Unsupported relation source: ${n.source}`)}}_buildDocumentObjectViewField(e,t,n,r){switch(n.viewType){case"documentAccount":return{type:new _.bM(t.accountObject),description:"Account controlling the document",resolve:e=>e.metadata.controller};case"documentVersion":return{type:new _.bM(N),description:"Current version of the document",resolve:e=>e.commitId.toString()};case"relation":return this._buildDocumentObjectRelation(e,t,n.relation,r);default:throw new Error(`Unsupported view type: ${n.viewType}`)}}_buildScalarFieldType(e,t){const n="did"===t.type?e.accountObject:fe(t.type);return t.required?new _.bM(n):n}_buildFiltersType(e,t){const n=`${e}ObjectFilter`,r=`${e}Filters`,i={};for(const[o,s]of Object.entries(t)){let e;if("reference"===s.type&&s.indexed)if("enum"===s.refType){e=$e(be(this,Re)[s.refName]),be(this,Ne)[e.name]=e}else"node"===s.refType&&(e=be(this,Ne).StringValueFilter);else xe(s)&&s.indexed&&(e=be(this,Ne)[Fe[s.type]??"StringValueFilter"]);null!=e&&(i[o]={type:e})}Object.keys(i).length>0&&(be(this,Ne)[n]=new _.sR({name:`${n}Input`,fields:()=>i}),be(this,Ne)[r]=new _.sR({name:`${r}Input`,fields:()=>({where:{type:be(this,Ne)[n]},and:{type:new _.p2(new _.bM(be(this,Ne)[r]))},or:{type:new _.p2(new _.bM(be(this,Ne)[r]))},not:{type:be(this,Ne)[r]}})}))}_buildSortingType(e,t){const n=`${e}Sorting`,r={};for(const[i,o]of Object.entries(t))(qe(o)||xe(o))&&o.indexed&&(r[i]={type:De});Object.keys(r).length>0&&(be(this,Ne)[n]=new _.sR({name:`${n}Input`,fields:()=>r}))}_buildInputObjectType(e,t){const n=null!=be(this,Oe).models[e],r=e=>{const r={},i=n||e?"":"Partial";for(const[n,o]of Object.entries(t)){let t;switch(o.type){case"meta":case"view":continue;case"reference":switch(o.refType){case"connection":continue;case"enum":t=be(this,Re)[o.refName];break;case"node":t=A.km;break;case"object":if(t=be(this,Ne)[i+o.refName],null==t)throw new Error(`Missing referenced input type: ${i+o.refName}`)}break;case"list":{let e;if("reference"===o.item.type){if(e=be(this,Ne)[i+o.item.refName],null==e)throw new Error(`Missing referenced input type: ${i+o.item.refName}`)}else e=fe(o.item.type);t=new _.p2(e);break}default:t=fe(o.type)}null!=t&&(r[n]={type:e&&o.required?new _.bM(t):t})}return r};be(this,Ne)[e]=new _.sR({name:`${e}Input`,fields:()=>r(!0)}),n&&(be(this,Ne)[`Partial${e}`]=new _.sR({name:`Partial${e}Input`,fields:()=>r(!1)}))}_buildNodeMutations(e,t,n){"single"===n.accountRelation.type?be(this,ze)[`create${t}`]=(0,we.Fj)({name:`Create${t}`,inputFields:()=>({content:{type:new _.bM(be(this,Ne)[t])},options:{type:Se}}),outputFields:()=>({...e,document:{type:new _.bM(be(this,Re)[t])}}),mutateAndGetPayload:async(e,t)=>{if(null==t.ceramic.did||!t.ceramic.did.authenticated)throw new Error("Ceramic instance is not authenticated");return{document:await t.createSingle(n.id,e.content,{syncTimeoutSeconds:e.options?.syncTimeout})}}}):be(this,ze)[`create${t}`]=(0,we.Fj)({name:`Create${t}`,inputFields:()=>({content:{type:new _.bM(be(this,Ne)[t])}}),outputFields:()=>({...e,document:{type:new _.bM(be(this,Re)[t])}}),mutateAndGetPayload:async(e,t)=>{if(null==t.ceramic.did||!t.ceramic.did.authenticated)throw new Error("Ceramic instance is not authenticated");return{document:await t.createDoc(n.id,e.content)}}}),be(this,ze)[`update${t}`]=(0,we.Fj)({name:`Update${t}`,inputFields:()=>({id:{type:new _.bM(A.km)},content:{type:new _.bM(be(this,Ne)[`Partial${t}`])},options:{type:je}}),outputFields:()=>({...e,document:{type:new _.bM(be(this,Re)[t])}}),mutateAndGetPayload:async(e,t)=>{if(null==t.ceramic.did||!t.ceramic.did.authenticated)throw new Error("Ceramic instance is not authenticated");return{document:await t.updateDoc(e.id,e.content,e.options)}}})}_createSchema(e){const t={nodes:e.nodesField,...e.queryFields};for(const[r,i]of Object.entries(be(this,Oe).models)){const e=r[0].toLowerCase(),n=r.slice(1),o=be(this,Ne)[`${r}Filters`],s=be(this,Ne)[`${r}Sorting`],a={...we.Zd};o&&s&&(a.filters={type:o},a.sorting={type:s}),t[`${e}${n}Index`]={type:be(this,Re)[`${r}Connection`],args:a,resolve:async(e,t,n)=>{let{filters:r,...o}=t;return null!=r&&m(r),await n.queryConnection({...o,queryFilters:r,model:i.id})}},t[`${e}${n}Count`]={type:new _.bM(A._o),args:o?{filters:{type:o}}:{},resolve:async(e,t,n)=>{let{filters:r}=t;return null!=r&&m(r),await n.queryCount({queryFilters:r,model:i.id})}}}const n={query:new _.h6({name:"Query",fields:t})};return be(this,Me)||0===Object.keys(be(this,ze)).length||(n.mutation=new _.h6({name:"Mutation",fields:be(this,ze)})),new ye.XO(n)}constructor(e){ve(this,Oe,{writable:!0,value:void 0}),ve(this,Me,{writable:!0,value:void 0}),ve(this,Re,{writable:!0,value:{SortOrder:De}}),ve(this,Ne,{writable:!0,value:{..._e}}),ve(this,ze,{writable:!0,value:{}}),ve(this,Ae,{writable:!0,value:void 0}),ke(this,Oe,e.definition),ke(this,Me,!!e.readonly),ke(this,Ae,Object.entries(be(this,Oe).models).reduce(((e,t)=>{let[n,r]=t;return e[r.id]=n,e}),{}))}}function Be(e){return new Ve(e).build()}function Le(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function Ue(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Le(e,t,"get"))}function Ge(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Ze(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Le(e,t,"set"),n),n}var We=new WeakMap,Qe=new WeakMap;class Ke{get context(){return Ue(this,We)}async execute(e,t){const n=(0,j.Gu)(Ue(this,Qe),e);return n.length>0?{errors:n}:await(0,D.ht)({document:e,variableValues:t,contextValue:Ue(this,We),schema:Ue(this,Qe)})}async executeQuery(e,t){let n;try{n=(0,$.Qc)(e)}catch(r){return{errors:[r]}}return await this.execute(n,t)}constructor(e){Ge(this,We,{writable:!0,value:void 0}),Ge(this,Qe,{writable:!0,value:void 0});const{ceramic:t,context:n,definition:r,readonly:i,schema:o,...s}=e,a="string"==typeof t?new c.v(t):t;Ze(this,We,n??S({...s,ceramic:a})),Ze(this,Qe,function(e){const{definition:t,readonly:n,schema:r}=e;if(null!=r)return r;if(null==t)throw new Error("Invalid parameters to get schema: missing definition or schema");return Be({definition:t,readonly:n})}({definition:r,readonly:i,schema:o}))}}var Xe=n(89008);const Je="ComposeDB-ViewerID";var Ye=n(63383),He=n(53253),et=n(41845);function tt(e){const{definition:t,getViewerID:n,remoteExecutor:r,serverURL:i}=e;let o;if("function"==typeof r)o=r;else{if("function"!=typeof n||"string"!=typeof i)throw new Error("Invalid parameters to create hybrid schema: missing `remoteExecutor` or `getViewerID` and `serverURL` parameters");o=function(e,t){return(0,Ye.K)((async n=>{let{document:r,variables:i}=n;const o=t(),s=o?{[Je]:o}:{};return await(0,Xe.r)(e,{method:"POST",headers:s,body:{query:(0,et.S)(r),variables:i}})}))}(i,n)}const s={executor:o,schema:Be({definition:t,readonly:!0})};return(0,He.g)({subschemas:[Be({definition:t}),s],mergeTypes:!1,onTypeConflict:(e,t,n)=>n?.left.subschema===s?e:t})}function nt(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function rt(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,nt(e,t,"get"))}function it(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function ot(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,nt(e,t,"set"),n),n}var st=new WeakMap,at=new WeakMap,ct=new WeakMap;class lt{get context(){return rt(this,st)}get did(){return rt(this,st).ceramic.did}get id(){return rt(this,st).getViewerID()}get resources(){return rt(this,at)}setDID(e){rt(this,st).ceramic.did=e}async execute(e,t){return await rt(this,ct).execute(e,t)}async executeQuery(e,t){return await rt(this,ct).executeQuery(e,t)}constructor(e){it(this,st,{writable:!0,value:void 0}),it(this,at,{writable:!0,value:void 0}),it(this,ct,{writable:!0,value:void 0});const{ceramic:t,definition:n,remoteExecutor:r,serverURL:i,...o}=e,s="string"==typeof t?new c.v(t):t;ot(this,st,S({...o,ceramic:s})),ot(this,at,Object.values(n.models).map((e=>`ceramic://*?model=${e.id}`)));const a={ceramic:s,context:rt(this,st),definition:n};null==r&&null==i||(a.schema=tt({definition:n,getViewerID:()=>this.id,remoteExecutor:r,serverURL:i})),ot(this,ct,new Ke(a))}}var dt=n(70623);const ut={models:{BasicProfile:{id:"kjzl6hvfrbw6c8i6k87cma2gvbnw3hgz2j2tc0hmc6yzzc1zikbwsryulsnmmak",accountRelation:{type:"single"}},Posts:{id:"kjzl6hvfrbw6cags7lvf5ajsgdfqwnnhoyp5fr3fhmitskk0ksydeaspzxckpub",accountRelation:{type:"list"}},Following:{id:"kjzl6hvfrbw6c930807bvmzvcqkqv6ni1q2jhv5bc59hima9r9ci1zk22tpxq3v",accountRelation:{type:"list"}},Comments:{id:"kjzl6hvfrbw6cb3x190263pxlza37ls1gxizt1ea21gtr9xwp7qln05elotk0h8",accountRelation:{type:"list"}}},objects:{BasicProfile:{name:{type:"string",required:!0},emoji:{type:"string",required:!1},gender:{type:"string",required:!1},username:{type:"string",required:!0},description:{type:"string",required:!1},posts:{type:"view",viewType:"relation",relation:{source:"queryConnection",model:"kjzl6hvfrbw6cags7lvf5ajsgdfqwnnhoyp5fr3fhmitskk0ksydeaspzxckpub",property:"profileId"}},author:{type:"view",viewType:"documentAccount"}},Posts:{tag:{type:"string",required:!0,indexed:!0},body:{type:"string",required:!0},edited:{type:"datetime",required:!1,indexed:!0},created:{type:"datetime",required:!0,indexed:!0},profileId:{type:"streamid",required:!0},profile:{type:"view",viewType:"relation",relation:{source:"document",model:"kjzl6hvfrbw6c8i6k87cma2gvbnw3hgz2j2tc0hmc6yzzc1zikbwsryulsnmmak",property:"profileId"}},responses:{type:"view",viewType:"relation",relation:{source:"queryConnection",model:"kjzl6hvfrbw6cb3x190263pxlza37ls1gxizt1ea21gtr9xwp7qln05elotk0h8",property:"postId"}},author:{type:"view",viewType:"documentAccount"}},Following:{profileId:{type:"streamid",required:!0},profile:{type:"view",viewType:"relation",relation:{source:"document",model:"kjzl6hvfrbw6c8i6k87cma2gvbnw3hgz2j2tc0hmc6yzzc1zikbwsryulsnmmak",property:"profileId"}}},Comments:{edited:{type:"datetime",required:!1,indexed:!0},postId:{type:"streamid",required:!0},comment:{type:"string",required:!0},created:{type:"datetime",required:!0,indexed:!0},profileId:{type:"streamid",required:!0},post:{type:"view",viewType:"relation",relation:{source:"document",model:"kjzl6hvfrbw6cags7lvf5ajsgdfqwnnhoyp5fr3fhmitskk0ksydeaspzxckpub",property:"postId"}},profile:{type:"view",viewType:"relation",relation:{source:"document",model:"kjzl6hvfrbw6c8i6k87cma2gvbnw3hgz2j2tc0hmc6yzzc1zikbwsryulsnmmak",property:"profileId"}}}},enums:{},accountData:{basicProfile:{type:"node",name:"BasicProfile"},postsList:{type:"connection",name:"Posts"},followingList:{type:"connection",name:"Following"},commentsList:{type:"connection",name:"Comments"}}},pt=async e=>{dt.ZP.initialize("G-V2Y8T342EX");const t=new lt({ceramic:"https://ceramic-temp.hirenodes.io",definition:ut}),n=await t.executeQuery(`${e.query}`);if(console.log(n),n.errors&&dt.ZP.event({category:"sandbox-query",action:"query-error"}),!n.data.__schema)return dt.ZP.event({category:"sandbox-query",action:"query-success"}),n.data},mt={profiles:{values:[{title:"Profile Index",query:"# gets the first 10 indexed BasicProfile instances\n\nquery ProfileIndex {\n  basicProfileIndex(first: 10) {\n    edges {\n      node {\n        id\n        author{\n          id\n        }\n        username\n        description\n        gender\n        emoji\n      }\n    }\n  }\n}"},{title:"Known Did",query:'# gets the BasicProfile instance (if exists) \n# known pkh:did (using chainID 1 for Eth Mainnet) \n\nquery KnownDid {\n  node(id: "did:pkh:eip155:1:0xc362c16a0dcbea78fb03a8f97f56deea905617bb") {\n  ... on CeramicAccount {\n        basicProfile {\n          id\n          name\n          username\n          description\n          gender\n          emoji\n        }\n      }\n  \t}\n\t}'},{title:"Profile with Posts",query:"# gets the first 10 indexed BasicProfile instances\n\n# gets the first 5 posts published by each of the \n# 10 BasicProfile instances (if exists)\n\nquery WithPosts {\n  basicProfileIndex(first: 10) {\n    edges {\n      node {\n        username\n        posts(first: 5) {\n          edges {\n            node {\n              body\n              created\n            }\n          }\n        }\n      }\n    }\n  }\n}"},{title:"Profile with Comments on Posts",query:"# gets the first 10 indexed BasicProfile instances\n\n# gets the first 5 posts published by each of the \n# 10 BasicProfile instances (if exists)\n\n# gets the first 10 responses corresponding to each\n# of the 5 posts (if exists) \n\n# gets the corresponding BasicProfile instance for\n# each response & prints only the username property \n\nquery WithComments {\n  basicProfileIndex(first: 10) {\n    edges {\n      node {\n        username\n        posts(first: 5) {\n          edges {\n            node {\n              body\n              created\n              responses(first: 10) {\n                edges {\n                  node {\n                    comment\n                    created\n                    profile {\n                      username\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"},{title:"Known Stream",query:'# gets the BasicProfile instance (if exists) \n# based on a known StreamID\n\nquery KnownStream {\n  node(id: "k2t6wzhkhabz3a7xz88mk93y1q2waejk1w2b5rs3kc82e42dgpe4l1h4mcibih") {\n    ... on BasicProfile {\n      id\n      username\n      description\n      gender\n      emoji\n    }\n  }\n}'}]},comments:{values:[{title:"Comments With Posts",query:"# gets the last 20 indexed Comments instances (if exists)\n\n# gets the corresponding Posts instance that the comment\n# is responding to\n\n# gets the BasicProfile instance and its username property\n# corresponding to the Posts instance\n\nquery CommentsWithPost {\n    commentsIndex(last: 20) {\n      edges {\n        node {\n          comment\n          post {\n            body\n            profile {\n              username\n            }\n          }\n        }\n      }\n    }\n  }"},{title:"Ordered Comments",query:"# gets the first 10 indexed Comments instances (if exists)\n# based on sorting by each instance's created (date) field\n# in ascending order\n\n# gets the corresponding Posts instance that the comment\n# is responding to\n\n# gets the BasicProfile instance and its username property\n# corresponding to the Posts instance\n\nquery OrderedComments {\n    commentsIndex(sorting: { created: ASC }, first: 10) {\n      edges {\n        node {\n          comment\n          created\n          post {\n            body\n            profile {\n              username\n            }\n          }\n        }\n      }\n    }\n  }"}]},posts:{values:[{title:"Posts Index",query:"# gets the first 10 indexed Posts instances\n\n# gets the last 1 indexed Responses instance corresponding\n# to each of the 10 Posts instances (if exists)\n\n# gets the corresponding BasicProfile instance for\n# each response & prints only the username property \n\nquery PostsIndex{\n  postsIndex(first: 10) {\n    edges {\n      node {\n        id\n        body\n        tag\n        created\n        profile {\n          username\n        }\n        author{\n          id\n        }\n        responses(last: 1) {\n          edges {\n            node {\n              comment\n              created\n              profile {\n                username\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"},{title:"Known DID",query:'# gets the first 100 Posts instances (if exists) \n# for known pkh:did (using chainID 11155111 for Sepolia)\n\n# gets the BasicProfile instance corresponding to\n# each Posts instance\n\n# gets the first 5 Responses instances (if exists)\n# for each of the 100 Posts and prints both the\n# comment and created field\n\nquery KnownDid{\n  node(id: "did:pkh:eip155:11155111:0x8071f6f971b438f7c0ea72c950430ee7655fabce") {\n      ... on CeramicAccount {\n      id\n      postsList(first: 100) {\n        edges {\n        node {\n            id\n            body\n            created\n            profile {\n              username\n            }\n          \tresponses(first: 5){\n              edges{\n                node{\n                  comment\n                  created\n                }\n              }\n          \t}\n          }\n        }\n      }\n    } \n  }\n}'},{title:"Tag Filtered",query:'# gets the first 10 indexed Posts instances (if exists)\n# using a filter that grabs only the Posts instances\n# that have a tag property equal to "Governance"\n\n# also gets the BasicProfile instance and corresponding\n# username property for each of those Posts instances\n\nquery TagFiltered {\n  postsIndex(filters: { where: { tag: { equalTo: "Governance" } } }, first: 10) {\n    edges {\n      node {\n        body\n        created\n        profile {\n          username\n        }\n      }\n    }\n  }\n}'},{title:"Date Filtered",query:'# gets the last 10 indexed Posts instances (if exists)\n# using a filter that grabs only the Posts instances\n# that have a created property greater than "2022-05-10T14:15:00Z"\n\n# also gets the BasicProfile instance and corresponding\n# username property for each of those Posts instances\n\nquery DateFiltered {\n  postsIndex(filters: { where: { created: { greaterThan: "2022-05-10T14:15:00Z" } } }, last: 10) {\n    edges {\n      node {\n        body\n        created\n        profile {\n          username\n        }\n      }\n    }\n  }\n}'},{title:"Combine Filters",query:'# gets the first 20 indexed Posts instances (if exists)\n# using a double filter that grabs only the Posts instances\n# that have a created property greater than "2022-05-10T14:15:00Z"\n# AND a tag property equal to "Governance"\n\nquery CombineFilters {\n  postsIndex(\n    filters: {\n      and: [\n        { where: { created: { greaterThan: "2022-05-10T14:15:00Z" } } }\n        { and: { where: { tag: { equalTo: "Governance" } } } }\n      ]\n    }\n    first: 20\n  ) {\n    edges {\n      node {\n        body\n        created\n        tag\n      }\n    }\n  }\n}'}]}};function ft(e){return(0,s.Z)()?i.createElement(a.yB,{defaultTabs:mt[e.queries].values,storage:null,fetcher:pt}):i.createElement("div",null,"loading...")}n(68983),n(8739);const ht={title:"ComposeDB API Sandbox",description:"Test out example GraphQL queries on ComposeDB to learn how to access documents by relations, how to filter, and more.",hide_table_of_contents:!0},yt="Sandbox",wt={type:"mdx",permalink:"/sandbox",source:"@site/src/pages/sandbox.mdx",title:"ComposeDB API Sandbox",description:"Test out example GraphQL queries on ComposeDB to learn how to access documents by relations, how to filter, and more.",frontMatter:{title:"ComposeDB API Sandbox",description:"Test out example GraphQL queries on ComposeDB to learn how to access documents by relations, how to filter, and more.",hide_table_of_contents:!0}},gt=[{value:"Data Models",id:"data-models",level:2},{value:"Instructions",id:"instructions",level:3},{value:"Reading Profiles",id:"reading-profiles",level:2},{value:"<br />",id:"br-",level:2},{value:"Reading Posts",id:"reading-posts",level:2},{value:"<br />",id:"br--1",level:2},{value:"Reading Comments",id:"reading-comments",level:2},{value:"<br />",id:"br--2",level:2},{value:"Next Steps",id:"next-steps",level:2}],bt={toc:gt},vt="wrapper";function kt(e){let{components:t,...n}=e;return(0,o.kt)(vt,(0,r.Z)({},bt,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sandbox"},"Sandbox"),(0,o.kt)("p",null,"Test out several pre-made example queries below to gain hands-on exposure to accessing documents by relations, filtering and ordering by fields, and combining query logic."),(0,o.kt)("p",null,"For a deeper dive into querying, visit the ",(0,o.kt)("a",{parentName:"p",href:"./docs/0.5.x/guides/data-interactions/queries"},(0,o.kt)("strong",{parentName:"a"},"queries"))," page."),(0,o.kt)("h2",{id:"data-models"},"Data Models"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"The schema definitions that this sandbox uses are outlined in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ceramicstudio/EthDenver2023Demo/tree/main/composites"},(0,o.kt)("strong",{parentName:"a"},"this repository")),". The sandbox has been pre-populated with data corresponding to several fictionary people."),(0,o.kt)("h3",{id:"instructions"},"Instructions"),(0,o.kt)("p",null,"To interact with the ComposeDB Sandbox, simply press the pink play icon to execute the pre-written queries in the left-hand side of the embedded GraphiQL IDE. Results returned from your query will populate in the right-hand side of the interface."),(0,o.kt)("p",null,"You can also alter your query logic however you see fit, or build your own queries entirely from scratch based on the schema definitions."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Please note that this sandbox only processes read requests.")),(0,o.kt)("h2",{id:"reading-profiles"},"Reading Profiles"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Use the example queries below to access data related to the ",(0,o.kt)("inlineCode",{parentName:"p"},"BasicProfile")," model:"),(0,o.kt)("div",{style:{height:"60rem",width:"100%",margin:"auto"}},(0,o.kt)(ft,{queries:"profiles",mdxType:"Sandbox"})),(0,o.kt)("h2",{id:"br-"},(0,o.kt)("br",null)),(0,o.kt)("h2",{id:"reading-posts"},"Reading Posts"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Use the example queries below to access data related to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Posts")," model:"),(0,o.kt)("div",{style:{height:"60rem",width:"100%",margin:"auto"}},(0,o.kt)(ft,{queries:"posts",mdxType:"Sandbox"})),(0,o.kt)("h2",{id:"br--1"},(0,o.kt)("br",null)),(0,o.kt)("h2",{id:"reading-comments"},"Reading Comments"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Use the example queries below to access data related to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Comments")," model:"),(0,o.kt)("div",{style:{height:"60rem",width:"100%",margin:"auto"}},(0,o.kt)(ft,{queries:"comments",mdxType:"Sandbox"})),(0,o.kt)("h2",{id:"br--2"},(0,o.kt)("br",null)),(0,o.kt)("h2",{id:"next-steps"},"Next Steps"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"To begin building with ComposeDB in your local environment using the same data models you just queried, get started ",(0,o.kt)("a",{parentName:"p",href:"./docs/0.5.x/set-up-your-environment"},(0,o.kt)("strong",{parentName:"a"},"Setting Up Your Environment")),"."))}kt.isMDXComponent=!0},24079:()=>{}}]);